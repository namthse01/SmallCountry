// <auto-generated />
using System;
using CountryAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CountryAPI.Migrations
{
    [DbContext(typeof(CountryApiContext))]
    [Migration("20240624035515_AddPopulationField")]
    partial class AddPopulationField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CountryAPI.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("CountryAPI.Models.Commune", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("CommuneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.Property<Guid?>("TownId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("Commune", (string)null);
                });

            modelBuilder.Entity("CountryAPI.Models.District", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("District", (string)null);
                });

            modelBuilder.Entity("CountryAPI.Models.Town", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Populaation")
                        .HasColumnType("int");

                    b.Property<string>("TownName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Town", (string)null);
                });

            modelBuilder.Entity("CountryAPI.Models.Commune", b =>
                {
                    b.HasOne("CountryAPI.Models.Town", "Town")
                        .WithMany("Communes")
                        .HasForeignKey("TownId")
                        .HasConstraintName("FK_Commune_Town");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("CountryAPI.Models.Town", b =>
                {
                    b.HasOne("CountryAPI.Models.District", "District")
                        .WithMany("Towns")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK_Town_District");

                    b.Navigation("District");
                });

            modelBuilder.Entity("CountryAPI.Models.District", b =>
                {
                    b.Navigation("Towns");
                });

            modelBuilder.Entity("CountryAPI.Models.Town", b =>
                {
                    b.Navigation("Communes");
                });
#pragma warning restore 612, 618
        }
    }
}
